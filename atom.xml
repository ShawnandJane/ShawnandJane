<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>爱健身的程序猿</title>
  
  
  <link href="/hexo/atom.xml" rel="self"/>
  
  <link href="http://www.ShawnandJane.top/"/>
  <updated>2018-11-26T10:21:09.041Z</updated>
  <id>http://www.ShawnandJane.top/</id>
  
  <author>
    <name>Shawn_Huang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用 Hexo + NexT 搭建个人博客的详细步骤</title>
    <link href="http://www.ShawnandJane.top/2018/11/26/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <id>http://www.ShawnandJane.top/2018/11/26/我的第一篇文章/</id>
    <published>2018-11-26T10:21:09.000Z</published>
    <updated>2018-11-26T10:21:09.041Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://pimv9an6u.bkt.clouddn.com/background001.jpg" width="100%"><br><a id="more"></a></p><h3 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h3><p>本人这个博客也是参照许多网上提供的配置教程一步一步做出来的，说实话踩了许多坑，比如有时候会因为一个简单的路径问题浪费很多时间。为此写下这篇参考文章，希望对同样想搭建一个属于自己的博客的朋友提供一些帮助。OK，下面开始列出详细步骤。</p><h3 id="下载并安装必要的应用程序"><a href="#下载并安装必要的应用程序" class="headerlink" title="下载并安装必要的应用程序"></a>下载并安装必要的应用程序</h3><p>首先要声明的一点是，本人使用的是基于x64处理器的wins10系统，所以下面所列举的应用程序也是基于此系统进行下载安装的。其他系统的尚未尝试，如果你的电脑是其他系统的，请自行搜索相关方法。</p><ol><li><p><strong>Node.js</strong><br>1.1. 如果你的系统跟我的一样，请点击<a href="https://nodejs.org/dist/v4.4.3/node-v4.4.3-x64.msi" target="_blank" rel="noopener"><strong>这里</strong></a>进行下载并安装。<br>1.2. 如果你的系统是基于x86的，请点击<a href="https://nodejs.org/dist/v4.4.3/node-v4.4.3-x86.msi" target="_blank" rel="noopener"><strong>这里</strong></a> 进行下载并安装。<br>1.3. 安装好后，打开电脑内的 <strong>cmd</strong> 命令提示符(如果你不知道这是什么，请点击<a href="https://jingyan.baidu.com/article/a3761b2bf7cf631577f9aa63.html" target="_blank" rel="noopener"><strong>这里</strong></a>了解),输入此命令(注：记住每次输完后都要按一下键盘上的Enter键):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node --version</span><br></pre></td></tr></table></figure><p>如果显示这样就表示安装成功：<br><img src="http://pimv9an6u.bkt.clouddn.com/node.png" alt="nodejs"><br>PS: 为了后续更好管理你的整个博客项目，个人建议把所有要下载的程序全部安装在一个硬盘里。绝大部分软件都默认安装在C盘，如果你不想把这些东西全塞在C盘，在安装过程中注意需自定义安装路径。</p></li><li><p><strong>Git</strong><br>2.1. 点击<a href="https://gitforwindows.org/" target="_blank" rel="noopener"><strong>这里</strong></a>进行下载并安装。<br>2.2. 值得一提的是，在安装到下面这一步时，记得把最上面两个一起勾选，即在桌面创建快捷方式，这样每次要用时直接在桌面双击该图标即可：<br><img src="http://pimv9an6u.bkt.clouddn.com/Git01.jpg" alt="Git"><br>2.3. 安装完成后，你就会在桌面发现一个名为“Git Bash”的应用程序。记住一点：从现在开始往下所有要运行的命令都要在这个终端内输入并执行。</p></li><li><p><strong>Hexo</strong><br>3.1. 在终端内(记住，我所说的终端不是windows自带的那个，而是Git Bash)输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>3.2.等待一会，Hexo就会在终端内自动安装好。再输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure><p>当你看到类似一连串信息时即表示Hexo已经安装成功：<br><img src="http://pimv9an6u.bkt.clouddn.com/hexo.png" alt="Hexo"></p></li></ol><h3 id="本地搭建博客"><a href="#本地搭建博客" class="headerlink" title="本地搭建博客"></a>本地搭建博客</h3><ol><li><p><strong>创建项目文件</strong><br>1.1. 开始搭建之前，先在你选定的一个硬盘内创建一个项目文件夹，命名自定义，比如我的是 Hexo。</p><p>1.2. 选定刚创建的文件夹，右击选择“Git Bash here”，然后输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li><li><p><strong>启动服务器</strong><br>2.1. 终端内输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>2.2. 打开浏览器，访问本地网址： <a href="localhost:4000" target="_blank" rel="noopener">localhost:4000</a>，如果打开的页面是这样，即表示博客已经在本地部署成功。按 <strong>ctrl + c</strong> 终止执行该操作<br><img src="http://pimv9an6u.bkt.clouddn.com/localhost.jpg" alt="local"></p></li></ol><h3 id="部署博客到Git和Coding上"><a href="#部署博客到Git和Coding上" class="headerlink" title="部署博客到Git和Coding上"></a>部署博客到<strong>Git</strong>和<strong>Coding</strong>上</h3><ol><li><p><strong>部署到 Git 上</strong><br>1.1. 注册<strong>Github</strong>账号。点击<a href="https://github.com/join?source=experiment-header-dropdowns-home" target="_blank" rel="noopener"><strong>这里</strong></a>，按照官网提示一步一步写下去即可。</p><p>1.2. 注册好并且<strong>邮箱验证</strong>后，登录<strong>Github</strong>官网(<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a>)<br>注意如下图所示点红圈那个才是登录(另一个是注册按钮)：<br><img src="http://pimv9an6u.bkt.clouddn.com/Git.png" alt="Signin"><br>1.3. 创建一个仓库。登录官网后，点击右上角的加号：<br><img src="http://pimv9an6u.bkt.clouddn.com/Git01.png" alt="+"><br>然后再点击”<strong>New repository</strong>“,这时会跳转到如下所示界面：<br><img src="http://pimv9an6u.bkt.clouddn.com/Git02.png" alt="new"><br>这里注意两个地方(红圈标记所示)，也是只要处理这两个地方，其他不用管：</p><p>1.3.1. 第一个红圈的<strong>Owner</strong>所示你注册账号时填的用户名(Username)是什么，右边”<strong>Repository name</strong>“的格式就必须是 &lt;用户名&gt;.github.io。比如这张图的 <strong>Owner</strong>是“<strong>ShawnandJane</strong>“,那么后面就必须填”<strong>ShawnandJane.github.io</strong>“。</p><p>1.3.2 点击第二个红圈标示的框框，即勾选上。这两步搞定后，直接点击下面的“<strong>Create repository</strong>”即完成仓库的创建(PS:打开的这个网页先不要关)。</p><p>1.4. 接下来告知<strong>Git</strong>这台电脑上提交的文件是由谁及其电子邮件所提供的， 在<strong>Git Bash</strong>里面输入以下命令(前提是之前已经按<strong>ctrl + c</strong>关闭了本地网址):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"your_name"</span></span><br><span class="line">$ git config --global user.email <span class="string">"your_email"</span></span><br></pre></td></tr></table></figure><p>注意，这里的<strong>your_name</strong>填写你注册<strong>Github</strong>时的用户名，同理，<strong>your_email</strong>填写注册<strong>Github</strong>时的电子邮件。另外，双引号不能少，而且是英式双引号，即输入法输入的是英文时使用的双引号。</p><p>1.5. 生成新的<strong>SSH key</strong>。在终端内输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -b 4096 -C <span class="string">"your_email"</span></span><br></pre></td></tr></table></figure><p>注意这里的<strong>C</strong>是大写形式，另外，这里要按两次<strong>Enter</strong>键(运行该命令时中间会有停顿，这时就是第二次按<strong>Enter</strong>键了)。</p><p>1.6. 复制生成的key。先找到刚生成的文件，路径形如这样：C:\Users\Administrator.ssh。然后点开这个文件夹，找到<strong>id_rsa.pub</strong>这个文件，使用编辑器打开，然后按<strong>ctrl + a</strong>，再按<strong>ctrl + c</strong>将文件里的内容全部复制。  </p><p>1.7. 回到之前未关闭的网页，点击自己头像，然后依次点击<strong>Settings</strong>、<strong>SSH and GPG keys</strong>(左中)、<strong>New SSH key</strong>(右上角)，点进去后<strong>Title</strong>里随便输入什么，<strong>Key</strong>里直接按<strong>ctrl + v</strong>粘贴刚才复制的内容，然后点击<strong>Add SSH key</strong>即可。</p><p>1.8. 测试<strong>SSH</strong>是否连接成功，在终端内输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>按<strong>Enter</strong>键运行，中间会有一次停顿，输入<strong>yes</strong>即可。如果最后显示<strong>You’ve successfully authenticated</strong>即表示成功了。</p><p>1.9. 修改站点配置文件，即点开一开始创建的<strong>Hexo</strong>文件夹，然后找到 ”_config.yml“ 这个文件并用编辑器打开，翻到最末尾处，在<strong>deploy</strong>处添加以下内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> </span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>注意，冒号后面一定要有一个空格，不然后面的运行过程会报错！<br>然后，<strong>repo</strong>要填的内容看以下图片所示步骤(首先登录你的<strong>Github</strong>账号):<br><img src="http://pimv9an6u.bkt.clouddn.com/Git03.png" alt="Git03"><br><img src="http://pimv9an6u.bkt.clouddn.com/Git04.png" alt="Git04"><br><img src="http://pimv9an6u.bkt.clouddn.com/Git06.png" alt="Git06"><br>注意一定要选择<strong>SSH</strong>地址，而不是<strong>HTTPS</strong>地址，然后点击右下角的那个小图标即表示复制该地址。在<strong>repo</strong>处按<strong>ctrl + v</strong>粘贴该地址，然后保存即可。</p><p>1.10. 安装必要的插件，在终端内输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后按<strong>Enter</strong>键运行。时间可能有点久，一般来说运行过程会跳出一个<strong>Github</strong>登录页面，按提示输入后登录即可，然后还会再运行一段时间，耐心等就可以了。运行完后，如果你看到的最后一行是这样：”<strong>INFO Deploy done: git</strong>“即表示部署成功啦！</p><p>等待一会，在浏览器访问属于你的网址：https://&lt;用户名&gt;.github.io，如果能跳转进去，即表示大功告成。</p><p>PS：很遗憾的是我自己的居然不能登录进去。然后我发现很奇怪的一点：别人的<strong>repo</strong>(SSH地址)都是这种格式——</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git@github.com:&lt;用户名&gt;/&lt;用户名&gt;.github.io.git</span><br></pre></td></tr></table></figure><p>然而我的却是——</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git@github.com:&lt;用户名&gt;/&lt;用户名&gt;.github.git</span><br></pre></td></tr></table></figure><p>仔细对比发现少了”.io“。到现在我也不知道这是为什么，后来我就不管这个了，直接买了域名，用域名就能登录了(捂脸）~</p></li></ol><ol start="2"><li><p><strong>部署到 Coding 上</strong><br>2.1. 步骤和上面的差不多，首先点击<a href="https://coding.net/register" target="_blank" rel="noopener"><strong>这里</strong></a>注册账号(这里建议用户名跟<strong>Github</strong>里的一样，方便管理)。</p><p>2.2. 新建项目。注册并验证好后，登录进去，然后将鼠标移到页面右上角的 “+” 键，点击”<strong>项目</strong>“这个选项，跳转到新建项目页面：<br><img src="http://pimv9an6u.bkt.clouddn.com/coding01.png" alt="coding01"><br><img src="http://pimv9an6u.bkt.clouddn.com/coding02.png" alt="coding02"><br>这里同样要注意的是，<strong>项目名称</strong>必须跟用户名一样。按照提示新建项目后，会跳转到这个页面：<br><img src="http://pimv9an6u.bkt.clouddn.com/coding04.png" alt="coding04"><br>按照红圈所示依次 “代码”——“Pages服务”——“一键开启Coding Pages”，过一会即可部署成功。</p><p>2.3. 将本地博客推送到<strong>CodingPages</strong><br>2.3.1. 首先将之前的<strong>id_rsa.pub</strong>文件的内容再次复制，然后如下图所示部署公钥：<br><img src="http://pimv9an6u.bkt.clouddn.com/coding05.jpg" alt="coding05"><br><img src="http://pimv9an6u.bkt.clouddn.com/coding06.png" alt="coding06"><br>同样，项目名称随便填，公钥内容粘贴之前复制的内容进去即可。勾选后点击 ”新建“ 按钮即可。</p><p>2.3.2. 测试是否添加成功。在终端输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@git.coding.net</span><br></pre></td></tr></table></figure><p>中间也会有停顿，输入<strong>yes</strong>即可。继续等待运行，当看到”<strong>You’ve successfully authenticated</strong>“即表示OK了。</p><p>2.3.3. 在<strong>Coding</strong>官网里找到你之前新建的那个项目，浏览器内网址格式这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://coding.net/u/用户名/p/用户名</span><br></pre></td></tr></table></figure><p>进去后，右下角找到如下图所示<strong>SSH</strong>地址，点小图标复制该网址：<br><img src="http://pimv9an6u.bkt.clouddn.com/coding08.png" alt="coding08"><br>2.3.4. 在编辑器里打开之前提过的站点配置文件，将文件末尾的<strong>deploy</strong>内容补充完整，如我的是这样：<br><img src="http://pimv9an6u.bkt.clouddn.com/coding07.png" alt="coding07"><br>输入后保存文件，在终端输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>如果最后显示 “<strong>INFO Deploy done: git</strong>“，那么大功告成！</p></li></ol><h3 id="购买、解析及绑定域名"><a href="#购买、解析及绑定域名" class="headerlink" title="购买、解析及绑定域名"></a>购买、解析及绑定域名</h3><ol><li><p>网上有很多关于域名这方面的教程，我看了之后选择了阿里云，如果你选其他的也行。如果你选的跟我的一样，那好，我们接着往下走。先注册账号，点<a href="https://account.aliyun.com/register/register.htm?spm=5176.8061372.1146454.26.34fc3399rbyRoO&amp;oauth_callback=https%3A%2F%2Fwanwang.aliyun.com%2Fdomain%2Fnewgtld%2F%3Fspm%3D5176.8048432.308878.26.1db62cf8aexrOw%23.top" target="_blank" rel="noopener"><strong>这里</strong></a>。(注册过程比较繁琐，还要实名认证之类的，因此要有耐心)</p></li><li><p>注册并验证后，点击<a href="https://wanwang.aliyun.com/domain/" target="_blank" rel="noopener"><strong>这里</strong></a>进入域名购买页面，会发现有很多后缀的域名，不同后缀的域名价格也不一样。我选择的后缀是<strong>top</strong>的域名。<br>按照你想选的挑选一个后，点击它跳转到另一个页面，比如我选择的这个：<br><img src="http://pimv9an6u.bkt.clouddn.com/yuming02.png" alt="yuming02"><br><img src="http://pimv9an6u.bkt.clouddn.com/yuming03.png" alt="yuming03"><br>这里就要输入你想拥有的域名的查询了，有可能输入后你点击”立即查询“会提示已经有该域名了。如果有的话，换一个；如果没有，比如我随便输入一长串乱码字母，然后点击”立即查询“：<br><img src="http://pimv9an6u.bkt.clouddn.com/yuming05.png" alt="yuming05"><br>发现显示”<strong>未注册</strong>“,那么直接点击”<strong>加入清单</strong>“，然后发现右边圈圈的购物车小图标右上标了1，点击该图标，进入购买页面：<br><img src="http://pimv9an6u.bkt.clouddn.com/yuming07.png" alt="yuming07"><br>先选择域名持有者为“<strong>个人</strong>”，然后要创建新的信息模板，点击后会跳转到一个页面，耐心输入它要求的内容。创建好后，在确认订单页面右下角勾选”我已阅读…“后点击”<strong>立即购买</strong>“支付购买该订单即可。</p></li><li><p>解析域名。支付成功后，点击右上角自己的头像，然后按红圈提示找到域名解析处：<br><img src="http://pimv9an6u.bkt.clouddn.com/yuming08.png" alt="yuming08"><br>点击”<strong>解析</strong>“二字，然后在跳转的页面右上角点击”<strong>添加记录</strong>“，输入以下三条记录：<br><img src="http://pimv9an6u.bkt.clouddn.com/yuming09.png" alt="yuming09"><br>输入保存。</p></li><li><p>分别在<strong>Github</strong>和<strong>Coding</strong>上绑定域名<br>4.1. 在<strong>Github</strong>上绑定域名。<br>首先输入网址——”<strong><a href="https://github.com/用户名/用户名/settings" target="_blank" rel="noopener">https://github.com/用户名/用户名/settings</a></strong>“<br>进去后，找到<strong>Custom domain</strong>，在框框内输入之前购买的域名，比如”<a href="http://www.adkjalkdj.top&quot;" target="_blank" rel="noopener">www.adkjalkdj.top&quot;</a>.<br>点击<strong>Save</strong>即可。</p><p>4.2. 在<strong>Coding</strong>上绑定域名。<br>在浏览器进入网址——“<strong><a href="https://coding.net/u/用户名/p/用户名/git/pages/settings" target="_blank" rel="noopener">https://coding.net/u/用户名/p/用户名/git/pages/settings</a></strong>”<br>然后，如下图所示：<br><img src="http://pimv9an6u.bkt.clouddn.com/yuming11.png" alt="yuming11"><br>输入刚提到的购买的域名，然后下面选择开启强制HTTPS访问即可。</p></li><li><p>打开项目文件夹<strong>Hexo</strong>内的<strong>source</strong>文件夹，新建一个 .txt  文件，命名为CNAME，在里面输入你购买的域名，保存后关闭。然后，左击选择该文件，右击，重命名，将 “.txt” 这个后缀删掉，再保存文件。一般来说，会有提示，没关系，继续点。至此所有步骤都已完成。</p></li></ol><h3 id="访问购买的新域名"><a href="#访问购买的新域名" class="headerlink" title="访问购买的新域名"></a>访问购买的新域名</h3><ol><li><p>在终端输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>同样，如果显示”<strong>INFO Deploy done: git</strong>“就OK了。<br>PS：每次修改了配置信息都应使用以上三步。</p></li><li><p>打开浏览器，输入你自己设置的域名。<br>如果可以访问成功，表明之前所有的努力都没有白费！是不是很激动！接下来就是好好装修我们的博客了~</p></li></ol><h3 id="更换博客主题并将之完善"><a href="#更换博客主题并将之完善" class="headerlink" title="更换博客主题并将之完善"></a>更换博客主题并将之完善</h3><ol><li><p>下载你喜欢的主题<br>1.1. 相信绝大多数人都不太喜欢<strong>Hexo</strong>自带的这个名为<strong>landscape</strong>的主题，那么怎么找到并更换自己想要的主题呢？首先，点击<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">这里</a>可以看到很多人推荐了很多风格的主题，自己慢慢看，然后决定选择哪个主题。<br>PS: 一开始我也看了很多主题，由于实在太多，不知哪种才是最让自己满意的。后来听说<strong>NexT</strong>主题简约，而且相关配置方面的文档也很齐全，因此下定决心就选它了~</p><p>1.2. 选择了你喜欢的主题后，下面开始下载该主题(这里我假设你选的也是<strong>NexT</strong>主题，你可以点击<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener"><strong>这里</strong></a>查看该主题的详细文档说明)。这里介绍两种方法：<br>1.2.1. 在终端输入以下命令下载<strong>NexT</strong>主题(为了方便操作，建议将压缩包下载至<strong>Hexo</strong>所在的硬盘内):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>下载时的等待时间，可以打开项目文件夹(<strong>Hexo</strong>)内的<strong>themes</strong>文件夹，新建一个名为<strong>next</strong>的文件夹。下载好后，找到该压缩包，将其解压至刚新建的<strong>next</strong>文件夹内即可。</p><p>1.2.2. 为什么要说第二种方法呢，说来也奇怪，我用上面方法总是会报错，试了很多次，在网上查了很久都没解决，就干脆用这种方法了…点击<a href="https://github.com/iissnan/hexo-theme-next/releases" target="_blank" rel="noopener"><strong>这里</strong></a>，下载<strong>zip</strong>格式的压缩包：<br><img src="http://pimv9an6u.bkt.clouddn.com/zhuti01.png" alt="zhuti01"><br>下载会很慢，可能会下载不成功，只能耐心重新下载直到下载完(当然，如果你有什么好的解决办法，记得告诉我~)。下载好后跟上面一样，解压到那个新建的文件夹即可。</p></li></ol><ol start="2"><li><p>启用<strong>NexT</strong>主题<br>2.1. 使用编辑器打开之前提到的站点配置文件，找到<strong>theme</strong>字段，将其改为 <strong>next</strong>。<br>如果你用的编辑器也是<strong>Atom</strong>，那么我告诉你怎么更快找到该字段。首先在<strong>Atom</strong>内打开该文件，然后同时按住 <strong>ctrl + f</strong> 键，这时下方会跳出一个框，输入<strong>theme</strong>，点击右边的 <strong>find</strong> 按钮，这时就会自动跳到该字段，非常省时省力的方法。修改后如下图所示：<br><img src="http://pimv9an6u.bkt.clouddn.com/zhuti02.png" alt="zhuti02"><br>2.2. 另外，<strong>NexT</strong>主题提供了四种风格的外观供你选择，打开<strong>next</strong>文件夹内的<strong>主题配置文件</strong>，名称也是 “_config.yml” (注意别和之前一直提到的<strong>站点配置文件</strong>搞混了)。<br>然后按照刚才说的快捷查找方法搜索“<strong>scheme settings</strong>”字段，这时你就可以看到有四种风格的设置。你可以挑选其中一个，将其前面的 “#” 键去掉，注意，其他三个必须注释掉，即一定要在前面加 “#” 键，如下图所示：<br><img src="http://pimv9an6u.bkt.clouddn.com/zhuti03.png" alt="zhuti03"><br>选择后记得按“<strong>ctrl + s</strong>”保存设置。接下来就是查看实际效果的时候了！在硬盘内找到项目文件夹，左击，然后右击选择 “<strong>Git Bash here</strong>”，输入以下三个命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>等它运行完后，在浏览器输入你的域名，<strong>Binggo！！！</strong>，是不是发现博客主题已经换了！</p><p>2.3. 完善该主题的其他功能。这里我就不写太多了，因为我也是完全参考一个网上教程来设置的，详情点击<a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener"><strong>这里</strong></a>。因为作者已经写得很清楚了，所以大家看这个设置自己想设置的内容即可。<br>还想更完善博客的朋友，我在这推荐以下几篇文章供大家参考：<br><a href="https://blog.csdn.net/ESA_DSQ/article/details/78604943" target="_blank" rel="noopener"><strong>hexo+NexT博客优化第二弹</strong></a><br><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html#%E6%9B%B4%E6%96%B0%E6%8F%90%E7%A4%BA%EF%BC%88%E5%8F%AF%E4%BB%A5%E6%9C%80%E5%90%8E%E7%9C%8B%EF%BC%89" target="_blank" rel="noopener"><strong>打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化</strong></a><br>网上还有很多很多关于优化<strong>NexT</strong>主题的文章，这里就不一一列举了，有其他需求的自行搜索即可。</p></li></ol><h3 id="写在末尾的话"><a href="#写在末尾的话" class="headerlink" title="写在末尾的话"></a>写在末尾的话</h3><ol><li>写到这里发现耗费了不少时间，但是感觉很值得，因为<strong>分享本身就是一件很愉悦的事</strong>。说实话我这个博客比较简陋，功能也不是很完善。以后有什么配置方面的改动会更新本文章内容。</li><li>另外，本博客暂时没有添加评论功能，所以如果你是参照我这篇文章搭建博客的，遇到了问题的话可以加我QQ：<strong>246179956</strong>，这样大家可以相互探讨如何解决。</li><li>欢迎你持续关注本博客后续的更新动态，谢谢大家~</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://pimv9an6u.bkt.clouddn.com/background001.jpg&quot; width=&quot;100%&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="http://www.ShawnandJane.top/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
</feed>
